{"version":3,"sources":["components/Feedback/RenderButtons/RenderButtons.js","components/Feedback/RenderStatistic/RenderStatistic.js","components/Feedback/Feedback.js","App.js","index.js"],"names":["RenderButtons","clickHandler","name","names","Object","keys","map","i","type","onClick","Statistic","value","countTotalFeedback","countPositiveFeedbackPercentage","good","neutral","bad","Feedback","useState","setGood","setNeutral","setBad","Math","ceil","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yNAyBeA,EAtBO,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,aAAaC,EAAU,EAAVA,KAChCC,EAAQC,OAAOC,KAAKH,GACxB,OACE,mCACA,6BACCC,EAAMG,KAAI,SAACC,GAAD,OACX,6BACE,wBACEC,KAAK,SACLC,QAAS,WACPR,EAAaM,IAHjB,SAMGA,KAPIA,WCaEG,EAnBG,SAAC,GAIZ,IAHLC,EAGI,EAHJA,MACAC,EAEI,EAFJA,mBACAC,EACI,EADJA,gCAEA,OACE,+BACE,wCAAWF,EAAMG,QACjB,2CAAcH,EAAMI,WACpB,uCAAUJ,EAAMK,OAChB,yCAAYJ,KACZ,oDAEGC,GAAmC,EAFtC,YC8CSI,EAtDG,WAEhB,MAAwBC,mBAAS,GAAjC,mBAAOJ,EAAP,KAAaK,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOH,EAAP,KAAgBK,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOF,EAAP,KAAYK,EAAZ,KAmBMT,EAAqB,WACzB,OAAOE,EAAOC,EAAUC,GAGpBH,EAAkC,WACtC,OAAOS,KAAKC,KAAMT,EAAOF,IAAwB,MAIjD,OACE,gCACE,uDACA,cAAC,EAAD,CAAeV,KAAM,CAACY,OAAKC,UAAQC,OACnCf,aA9BU,SAACU,GACf,OAAQA,GACR,IAAK,OACHQ,EAAQL,EAAM,GAChB,MACA,IAAK,UACHM,EAAWL,EAAS,GACtB,MACA,IAAK,MACHM,EAAOL,EAAK,OAuBV,4CAECH,IACC,cAAC,EAAD,CACEF,MAAO,CAACG,OAAKC,UAAQC,OACrBJ,mBAAoBA,IACpBC,gCAAiCA,MAGnC,sDC9CKW,MAJf,WACE,OAAO,cAAC,EAAD,KCCTC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.70787a4f.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from 'prop-types'\n\nconst RenderButtons = ({ clickHandler,name}) => {\nconst names = Object.keys(name)\n  return (\n    <>\n    <ul>\n   { names.map((i)=>   \n    <li key={i}>\n      <button\n        type=\"button\"\n        onClick={() => {\n          clickHandler(i);\n        }}\n      >\n        {i}\n      </button>\n    </li>\n  )}\n  </ul>\n  </>\n  );\n};\n\nexport default RenderButtons;\n\nRenderButtons.propTypes={\n  clickHandler:PropTypes.func.isRequired,\n  name:PropTypes.object.isRequired,\n}","import React from \"react\";\nimport PropTypes from 'prop-types'\n\nconst Statistic = ({\n  value,\n  countTotalFeedback,\n  countPositiveFeedbackPercentage,\n}) => {\n  return (\n    <ul>\n      <li>Good: {value.good}</li>\n      <li>Neutral: {value.neutral}</li>\n      <li>Bad: {value.bad}</li>\n      <li>Total: {countTotalFeedback}</li>\n      <li>\n        Positive feedback:\n        {countPositiveFeedbackPercentage || 0} %\n      </li>\n    </ul>\n  );\n};\n\nexport default Statistic;\n\nStatistic.propTypes={\n  value:PropTypes.object.isRequired,\n  countTotalFeedback:PropTypes.number.isRequired,\n  countPositiveFeedbackPercentage:PropTypes.number.isRequired,\n}","import React from \"react\";\nimport { useState } from \"react\";\n\nimport RenderButtons from \"./RenderButtons/RenderButtons\";\nimport Statistic from \"./RenderStatistic/RenderStatistic\";\n\nconst Feedback  = () => {\n\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  const onClick = (value) => {\n    switch (value){\n    case \"good\": \n      setGood(good +1)\n    break;\n    case \"neutral\":\n      setNeutral(neutral +1)\n    break;\n    case \"bad\":\n      setBad(bad +1)\n    break;\n    default:\n      break;\n\n}\n  };\n\n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    return Math.ceil((good / countTotalFeedback()) * 100);\n  };\n\n  \n    return (\n      <div>\n        <h1>Please Leave feedback</h1>\n        <RenderButtons name={{good,neutral,bad}} \n        clickHandler={onClick} \n        />\n        <h2>Statistics</h2>\n\n        {countPositiveFeedbackPercentage() ? (\n          <Statistic\n            value={{good,neutral,bad}}\n            countTotalFeedback={countTotalFeedback()}\n            countPositiveFeedbackPercentage={countPositiveFeedbackPercentage()}\n          />\n        ) : (\n          <p>No feedback given</p>\n        )}\n      </div>\n    );\n  \n}\n\nexport default Feedback ","import React from \"react\";\nimport Feedback from \"./components/Feedback/Feedback\";\n\nfunction App() {\n  return <Feedback />;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}